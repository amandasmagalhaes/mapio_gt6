rm(list=ls())
setwd("C:/Users/amand/Amanda/GitHub/mapio_gt6")
getwd()
pacman::p_load(
# Importação de dados
"haven",
# Manipulação de dados
"dplyr",
# Visualização de dados
"ggplot2",
# Modelagem estatística
"splines", "lme4", "glmmTMB"
)
dta <- read_dta("C:/Users/amand/Amanda/GitHub/mapio_gt6/clima_obitos.dta")
attach(dta)
## Descritiva ####
summary(df$data)
summary(dta$data)
summary(dta$data)
pacman::p_load(
# Importação de dados
"haven",
# Manipulação de dados
"dplyr", "lubridate",
# Visualização de dados
"ggplot2",
# Modelagem estatística
"splines", "lme4", "glmmTMB"
)
df %>%
mutate(
ano = year(data),
mes = month(data)
) %>%
count(ano, mes) %>%
arrange(ano, mes)
dta %>%
mutate(
ano = year(data),
mes = month(data)
) %>%
count(ano, mes) %>%
arrange(ano, mes)
View(dta)
summary(dta$data)
df %>%
mutate(ano = year(data),
mes = month(data)) %>%
count(ano, mes) %>%
arrange(ano, mes)
dta %>%
mutate(ano = year(data),
mes = month(data)) %>%
count(ano, mes) %>%
arrange(ano, mes)
dta %>%
mutate(ano = year(data)) %>%
count(ano) %>%
arrange(ano)
dta %>%
mutate(mes = month(data)) %>%
count(mes) %>%
arrange(mes)
dta %>%
mutate(ano = year(data)) %>%
count(ano) %>%
arrange(ano)
dta %>%
mutate(mes = month(data)) %>%
count(mes) %>%
arrange(mes)
summary(dta$temp_max)
summary(dta$temp_media)
summary(dta$temp_min)
summary(dta$amplitude_termica)
summary(dta$orvalho)
summary(dta$umidade_relativa_media)
summary(dta$umidade_relativa_min)
summary(dta$velocidade_vento_max)
summary(dta$velocidade_vento_media)
summary(dta$pressao_atm_media)
summary(dta$precipitacao_total)
summary(dta$temp_max_mes)
summary(dta$temp_max_mes_mais5C)
summary(dta$temp_min_mes)
summary(dta$temp_min_mes_menos5C)
summary(dta$obitos_feminino)
summary(dta$obitos_masculino)
summary(dta$obitos_infantil)
summary(dta$obitos_total)
table(dta$obitos_infantil, useNA = "always")
table(dta$obitos_infantil)
table(dta$obitos_masculino)
print(sort(table(dta$obitos_masculino)), right = TRUE)
tab <- table(dta$obitos_masculino)
freq <- as.vector(tab)
valores <- as.numeric(names(tab))
percent <- round(100 * freq / sum(freq), 2)
resultado <- data.frame(
`Óbitos em homens` = valores,
Freq = freq,
Percent = percent
)
print(resultado)
summary(dta$obitos_masculino)
tab <- table(dta$obitos_masculino)
data.frame(`Óbitos em homens` = as.numeric(names(tab)),
Freq = as.vector(tab),
Percent = round(100 * as.vector(tab) / sum(tab), 1))
summary(dta$obitos_infantil)
tab <- table(dta$obitos_infantil)
data.frame(`Óbitos em homens` = as.numeric(names(tab)),
Freq = as.vector(tab),
Percent = round(100 * as.vector(tab) / sum(tab), 1))
summary(dta$obitos_total)
tab <- table(dta$obitos_total)
data.frame(`Óbitos` = as.numeric(names(tab)),
Freq = as.vector(tab),
Percent = round(100 * as.vector(tab) / sum(tab), 1))
tab <- table(dta$obitos_feminino)
data.frame(`Óbitos` = as.numeric(names(tab)),
Freq = as.vector(tab),
Percent = round(100 * as.vector(tab) / sum(tab), 1))
tab <- table(dta$obitos_masculino)
data.frame(`Óbitos` = as.numeric(names(tab)),
Freq = as.vector(tab),
Percent = round(100 * as.vector(tab) / sum(tab), 1))
tab <- table(dta$obitos_total)
data.frame(`Óbitos` = as.numeric(names(tab)),
Freq = as.vector(tab),
Percent = round(100 * as.vector(tab) / sum(tab), 1))
boxplot(dta$temp_max,
main = "Boxplot da Temperatura Máxima",
ylab = "Temperatura Máxima (°C)",
col = "lightblue")
pacman::p_load(
# Importação de dados
"haven",
# Manipulação de dados
"dplyr", "lubridate", "tidyr",
# Visualização de dados
"ggplot2",
# Modelagem estatística
"splines", "lme4", "glmmTMB"
)
# transformar dados em formato longo
dta_long <- dta %>%
pivot_longer(cols = c(temp_max, temp_media, temp_min),
names_to = "Tipo_Temperatura",
values_to = "Temperatura")
# boxplot comparativo
ggplot(dta_long, aes(x = Tipo_Temperatura, y = Temperatura, fill = Tipo_Temperatura)) +
geom_boxplot(alpha = 0.7) +
labs(title = "Boxplot das Temperaturas Máxima, Média e Mínima",
x = "Tipo de Temperatura",
y = "Temperatura (°C)") +
theme_minimal() +
theme(legend.position = "none")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temp Máx", "Temp Média", "Temp Mín"),
col = c("red", "green", "blue"),
main = "Boxplot das Temperaturas",
ylab = "Temperatura (°C)")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temp Máx", "Temp Média", "Temp Mín"),
col = c("#D64933", "#35b779", "#303B56"),
main = "Boxplot das Temperaturas",
ylab = "Temperatura (°C)")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temp Máx", "Temp Média", "Temp Mín"),
col = c("#D64933", "#35b779", "#2F3F75"),
main = "Boxplot das Temperaturas",
ylab = "Temperatura (°C)")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temp Máx", "Temp Média", "Temp Mín"),
col = c("#D64933", "#35b779", "#2A4080"),
main = "Boxplot das Temperaturas",
ylab = "Temperatura (°C)")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temp Máx", "Temp Média", "Temp Mín"),
col = c("#D64933", "#35b779", "#253C9C"),
main = "Boxplot das Temperaturas",
ylab = "Temperatura (°C)")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temp Máx", "Temp Média", "Temp Mín"),
col = c("#D64933", "#35b779", "#1F3399"),
main = "Boxplot das Temperaturas",
ylab = "Temperatura (°C)")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temp Máx", "Temp Média", "Temp Mín"),
col = c("#D64933", "#35b779", "#1A2C8C"),
main = "Boxplot das Temperaturas",
ylab = "Temperatura (°C)")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temp Máx", "Temp Média", "Temp Mín"),
col = c("#D64933", "#35b779", "#253C9C"),
main = "Boxplot das Temperaturas",
ylab = "Temperatura (°C)")
summary(dta$temp_min)
summary(dta$temp_max)
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temperatura máxima", "Temperatura média", "Temperatura míniman"),
col = c("#D64933", "#35b779", "#253C9C"),
border = "black",
ylim = c(0, 40),
ylab = "Temperatura (°C)",
main = "")
axis(side = 2, at = seq(0, 40, by = 5))
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temperatura máxima", "Temperatura média", "Temperatura míniman"),
col = c("#D64933", "#35b779", "#253C9C"),
border = "black",
ylim = c(0, 40),
ylab = "Temperatura (°C)",
main = "")
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temperatura máxima", "Temperatura média", "Temperatura míniman"),
col = c("#D64933", "#35b779", "#253C9C"),
border = "black",
ylim = c(0, 40 by = 5),
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Temperatura máxima", "Temperatura média", "Temperatura mínima"),
col = c("#D64933", "#35b779", "#253C9C"),
border = "black",
ylim = c(0, 40),
ylab = "Temperatura (°C)",
main = "",
yaxt = "n"); axis(2, at = seq(0, 40, by = 5))
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Máxima", "Média", "Mínima"),
col = c("#D64933", "#35b779", "#253C9C"),
border = "black",
ylim = c(0, 40),
ylab = "Temperatura (°C)",
main = "",
yaxt = "n"); axis(2, at = seq(0, 40, by = 5))
boxplot(dta$temp_max, dta$temp_media, dta$temp_min,
names = c("Máxima", "Média", "Mínima"),
col = c("#D64933", "#35b779", "#253C9C"),
border = "black",
ylim = c(0, 40),
ylab = "Temperatura (°C)",
main = "",
yaxt = "n"); axis(2, at = seq(0, 40, by = 5))
# Transformar os dados para formato longo
dta_long <- dta %>%
select(temp_max, temp_media, temp_min) %>%
pivot_longer(cols = everything(),
names_to = "tipo",
values_to = "temperatura") %>%
mutate(tipo = factor(tipo, levels = c("temp_max", "temp_media", "temp_min"),
labels = c("Máxima", "Média", "Mínima")))
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Máxima" = "#D64933", "Média" = "#35b779", "Mínima" = "#253C9C")) +
scale_y_continuous(name = "Temperatura (°C)", breaks = seq(0, 40, by = 5), limits = c(0, 40)) +
theme_minimal() +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
# Transformar os dados para formato longo
dta_long <- dta %>%
select(temp_min, temp_media, temp_max) %>%
pivot_longer(cols = everything(),
names_to = "tipo",
values_to = "temperatura") %>%
mutate(tipo = factor(tipo, levels = c("temp_min", "temp_media", "temp_max"),
labels = c("Mínima", "Média", "Máxima")))
dta_long
# Transformar os dados para formato longo
dta_long <- dta %>%
select(temp_min, temp_media, temp_max) %>%
pivot_longer(cols = everything(),
names_to = "tipo",
values_to = "temperatura") %>%
mutate(tipo = factor(tipo, levels = c("temp_min", "temp_media", "temp_max"),
labels = c("Mínima", "Média", "Máxima")))
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933")) +
scale_y_continuous(name = "Temperatura (°C)",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")+
theme(strip.text = element_blank())
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
ggsave("temp_boxplot.jpg", width = 21, height = 12, units = "in", dpi = 300)
# Transformar os dados para formato longo
dta_long <- dta %>%
select(temp_min, temp_media, temp_max, amplitude_termica) %>%
pivot_longer(cols = everything(),
names_to = "tipo",
values_to = "temperatura") %>%
mutate(tipo = factor(tipo,
levels = c("temp_min", "temp_media", "temp_max", "amplitude_termica"),
labels = c("Mínima", "Média", "Máxima", "Amplitude térmica")))
# Transformar os dados para formato longo
dta_long <- dta %>%
select(temp_min, temp_media, temp_max, amplitude_termica) %>%
pivot_longer(cols = everything(),
names_to = "tipo",
values_to = "temperatura") %>%
mutate(tipo = factor(tipo,
levels = c("temp_min", "temp_media", "temp_max", "amplitude_termica"),
labels = c("Mínima", "Média", "Máxima", "Amplitude térmica")))
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933",
"Amplitude Térmica" = "#F0BF21")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933",
"Amplitude Térmica" = "#F0BF21")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933",
"Amplitude Térmica" = "#D64933")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
# Transformar os dados para formato longo
dta_long <- dta %>%
select(temp_min, temp_media, temp_max, amplitude_termica) %>%
pivot_longer(cols = everything(),
names_to = "tipo",
values_to = "temperatura") %>%
mutate(tipo = factor(tipo,
levels = c("temp_min", "temp_media", "temp_max", "amplitude_termica"),
labels = c("Mínima", "Média", "Máxima", "Amplitude térmica")))
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933",
"Amplitude Térmica" = "#D64933")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933",
"Amplitude térmica" = "#F0BF21")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
# Transformar os dados para formato longo
dta_long <- dta %>%
select(temp_min, temp_media, temp_max) %>%
pivot_longer(cols = everything(),
names_to = "tipo",
values_to = "temperatura") %>%
mutate(tipo = factor(tipo, levels = c("temp_min", "temp_media", "temp_max"),
labels = c("Mínima", "Média", "Máxima")))
# Criar o boxplot
ggplot(dta_long, aes(x = tipo, y = temperatura, fill = tipo)) +
geom_boxplot(color = "black") +
scale_fill_manual(values = c("Mínima" = "#253C9C",
"Média" = "#35b779",
"Máxima" = "#D64933")) +
scale_y_continuous(name = "Temperatura (°C) \n",
breaks = seq(0, 40, by = 5),
limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
labs(x = "", y = "Temperatura (°C)")
ggsave("temp_boxplot.jpg", width = 21, height = 12, units = "in", dpi = 300)
