col = c(plot_col[1], plot_col[3]),
lty = 1,
lwd = 2,
bty = "n",
cex = 1.1,
y.intersp = 0.2)
# Valores das MMTs
mmt_int1 <- round(get_cen(red_int1), 1)  # MMT fim de semana
mmt_int2 <- round(get_cen(red_int2), 1)  # MMT dia de semana
# Valor p do teste qui-quadrado
anova_result <- anova(modelo1, modelo_int1, test = "Chisq")
p_value <- signif(anova_result$`Pr(>Chi)`[2], 3)  # valor p do segundo modelo comparado
# Legenda MMTs
legend(x = 27.4, y = 0.98,
legend = c(paste0("MMT Fim de semana: ", mmt_int1, " ºC"),
paste0("MMT Dia de semana: ", mmt_int2, " ºC")),
bty = "n",
cex = 1,
y.intersp = 0.2)
# Legenda do teste de comparação
legend(x = 27.2, y = 0.95,
legend = paste0("Teste interação (Chi2): p = ", p_value),
bty = "n", cex = 1)
dev.copy(jpeg, filename = "curva_temp_mort_MMT_semana.jpg", width = 21, height = 12, units = "in", res = 300)
dev.off()
plot(red_int1_own_MMT,
xlab = "\nTemperatura (ºC)",
ylab = "Risco Relativo",
main = "Curva Temperatura–Mortalidade",
col = plot_col[1],
ci.arg = list(col = alpha(plot_col[1], 0.2)),
xaxt = "n", yaxt = "n", lwd = 2)
axis(1, at = seq(12, 32, by = 1))
axis(2, at = seq(0.5, 3.0, by = 0.5))
lines(red_int2_own_MMT, ci = "area", col = plot_col[3],
ci.arg = list(col = alpha(plot_col[3], 0.2), lwd = 2))
legend(x = 11.3, y = 3.05,
legend = c("Fim de semana", "Dia de semana"),
col = c(plot_col[1], plot_col[3]),
lty = 1,
lwd = 2,
bty = "n",
cex = 1.1,
y.intersp = 0.2)
# Valores das MMTs
mmt_int1 <- round(get_cen(red_int1), 1)  # MMT fim de semana
mmt_int2 <- round(get_cen(red_int2), 1)  # MMT dia de semana
# Valor p do teste qui-quadrado
anova_result <- anova(modelo1, modelo_int1, test = "Chisq")
p_value <- signif(anova_result$`Pr(>Chi)`[2], 3)  # valor p do segundo modelo comparado
# Legenda MMTs
legend(x = 27.5, y = 0.98,
legend = c(paste0("MMT Fim de semana: ", mmt_int1, " ºC"),
paste0("MMT Dia de semana: ", mmt_int2, " ºC")),
bty = "n",
cex = 1,
y.intersp = 0.2)
# Legenda do teste de comparação
legend(x = 27.4, y = 0.95,
legend = paste0("Teste interação (Chi2): p = ", p_value),
bty = "n", cex = 1)
dev.copy(jpeg, filename = "curva_temp_mort_MMT_semana.jpg", width = 21, height = 12, units = "in", res = 300)
dev.off()
plot_col
plot(red_int1_own_MMT,
xlab = "\nTemperatura (ºC)",
ylab = "Risco Relativo",
main = "Curva Temperatura–Mortalidade",
col = plot_col[1],
ci.arg = list(col = alpha(plot_col[1], 0.2)),
xaxt = "n", yaxt = "n", lwd = 2)
axis(1, at = seq(12, 32, by = 1))
axis(2, at = seq(0.5, 3.0, by = 0.5))
lines(red_int2_own_MMT, ci = "area", col = plot_col[3],
ci.arg = list(col = alpha(plot_col[3], 0.2), lwd = 2))
legend(x = 11.3, y = 3.05,
legend = c("Fim de semana", "Dia de semana"),
col = c(plot_col[1], plot_col[3]),
lty = 1,
lwd = 2,
bty = "n",
cex = 1.1,
y.intersp = 0.2)
# Valores das MMTs
mmt_int1 <- round(get_cen(red_int1), 1)  # MMT fim de semana
mmt_int2 <- round(get_cen(red_int2), 1)  # MMT dia de semana
# Valor p do teste qui-quadrado
anova_result <- anova(modelo1, modelo_int1, test = "Chisq")
p_value <- signif(anova_result$`Pr(>Chi)`[2], 3)  # valor p do segundo modelo comparado
# Legenda MMTs
legend(x = 27.6, y = 0.98,
legend = c(paste0("MMT Fim de semana: ", mmt_int1, " ºC"),
paste0("MMT Dia de semana: ", mmt_int2, " ºC")),
bty = "n",
cex = 1,
y.intersp = 0.2)
# Legenda do teste de comparação
legend(x = 27.4, y = 0.95,
legend = paste0("Teste interação (Chi2): p = ", p_value),
bty = "n", cex = 1)
dev.copy(jpeg, filename = "curva_temp_mort_MMT_semana.jpg", width = 21, height = 12, units = "in", res = 300)
dev.off()
# Vamos sobrepor as duas curvas, então é útil escolher uma combinação de cores fácil de ler.
plot_col <- viridisLite::viridis(4)
plot_col
plot(red_int1_own_MMT,
xlab = "\nTemperatura (ºC)",
ylab = "Risco Relativo",
main = "Curva Temperatura–Mortalidade",
col = plot_col[1],
ci.arg = list(col = alpha(plot_col[1], 0.2)),
xaxt = "n", yaxt = "n", lwd = 2)
axis(1, at = seq(12, 32, by = 1))
axis(2, at = seq(0.5, 3.0, by = 0.5))
lines(red_int2_own_MMT, ci = "area", col = plot_col[3],
ci.arg = list(col = alpha(plot_col[3], 0.2), lwd = 2))
legend(x = 11.3, y = 3.05,
legend = c("Fim de semana", "Dia de semana"),
col = c(plot_col[1], plot_col[3]),
lty = 1,
lwd = 2,
bty = "n",
cex = 1.1,
y.intersp = 0.2)
# Valores das MMTs
mmt_int1 <- round(get_cen(red_int1), 1)  # MMT fim de semana
mmt_int2 <- round(get_cen(red_int2), 1)  # MMT dia de semana
# Valor p do teste qui-quadrado
anova_result <- anova(modelo1, modelo_int1, test = "Chisq")
p_value <- signif(anova_result$`Pr(>Chi)`[2], 3)  # valor p do segundo modelo comparado
# Legenda MMTs
legend(x = 27.6, y = 0.98,
legend = c(paste0("MMT Fim de semana: ", mmt_int1, " ºC"),
paste0("MMT Dia de semana: ", mmt_int2, " ºC")),
bty = "n",
cex = 1,
y.intersp = 0.2)
# Legenda do teste de comparação
legend(x = 27.45, y = 0.95,
legend = paste0("Teste interação (Chi2): p = ", p_value),
bty = "n", cex = 1)
dev.copy(jpeg, filename = "curva_temp_mort_MMT_semana.jpg", width = 21, height = 12, units = "in", res = 300)
dev.off()
# Percentis de interesse
percentis <- c(0.05, 0.10, 0.75, 0.90, 0.95)
temps <- quantile(temp_media, probs = percentis, na.rm = TRUE)
# Criar lista com curvas lag-resposta
red_list <- lapply(temps, function(t) crossreduce(
cb1, modelo1, type = "var", cen = temp_media_mediana, value = t))
# Nomes das curvas
percent_labels <- c("5º Percentil", "10º Percentil", "75º Percentil", "90º Percentil", "95º Percentil")
legend_text <- paste0(percent_labels, ": ", round(temps, 1), "°C")
# Cores e estilo
colors <- c("#1B9E77FF", "#D95F02FF", "#7570B3FF", "#E7298AFF", "#E6AB02FF")
lty <- 1
# Plot inicial
plot(red_list[[1]],
xlab = "Lag (dias)",
ylab = "Risco Relativo",
main = paste0("Curvas lag-resposta para diferentes temperaturas, ref. ",
round(temp_media_mediana,1), "°C \n"),
ylim = c(0.95, 1.10),
col = colors[1],
lty = lty,
lwd = 2,
yaxt = "n",
xaxt = "n",
ci = "n")
axis(2, at = seq(0.95, 1.10, by = 0.05))
axis(1, at = seq(0, 21, by = 3))
# Adicionar demais curvas
invisible(lapply(2:length(red_list),
function(i) lines(red_list[[i]], col = colors[i], lty = lty, lwd = 2)))
# Legenda
legend(x = 16.95, y = 0.93, legend = legend_text,
col = colors, lty = lty, lwd = 2, bty = "n", y.intersp = 0.2)
# Salvar
dev.copy(jpeg, filename = "temp_mort_lag.jpg", width = 21, height = 12, units = "in", res = 300)
dev.off()
summary(dta$temp_media)
hist(dta$temp_media,
breaks = 20,                  # número de intervalos (bins), ajuste se quiser
col = "skyblue",               # cor das barras
border = "white",              # cor das bordas das barras
xlab = "Temperatura (°C)",    # label do eixo X
ylab = "Frequência",           # label do eixo Y
main = "Distribuição da Temperatura Média")  # título do gráfico
hist(dta$temp_media,
breaks = 20,
col = "#35b779",
border = "white",
xlab = "Temperatura (°C)",
ylab = "Frequência",
main = "Distribuição da Temperatura Média")
hist(dta$temp_media,
breaks = 20,
col = "#35b779",
border = "white",
xlab = "Temperatura média (°C)",
ylab = "Frequência",)
hist(dta$temp_media,
breaks = 20,
col = "#35b779",
border = "white",
xlab = "Temperatura média (°C)",
ylab = "Frequência",
main = "")
ggsave(filename = file.path("plots_temp", "temp_media.jpg"),
width = 21, height = 12, units = "in", dpi = 300)
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "#35b779", color = "white") +
xlab("Temperatura (°C)") +
ylab("Frequência") +
ggtitle("Distribuição da Temperatura Média") +
theme_minimal()
ggsave(filename = file.path("plots_temp", "temp_media.jpg"),
plot = p,
width = 21, height = 12, units = "in", dpi = 300)
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "#35b779", color = "white") +
xlab("\n Temperatura média(°C)") +
ylab("Frequência \n") +
ggtitle("") +
theme_minimal(base_size = 14)
p
ggsave(filename = file.path("plots_temp", "temp_media.jpg"),
plot = p,
width = 21, height = 12, units = "in", dpi = 300)
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray", color = "white") +
xlab("\n Temperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\n Temperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
theme_minimal(base_size = 14)
p
ggsave(filename = file.path("plots_temp", "temp_media.jpg"),
plot = p,
width = 21, height = 12, units = "in", dpi = 300)
summary(dta$temp_media)
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(0, 40, by = 5), limits = c(0, 40)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(0, 40, by = 5), limits = c(0, 40))
theme_minimal(base_size = 14)
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(0, 40, by = 5), limits = c(0, 40))
theme_minimal(base_size = 14)
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(0, 40, by = 5), limits = c(0, 40)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(0, 50, by = 5), limits = c(0, 50)) +
scale_y_continuous(breaks = seq(0, 1200, by = 100), limits = c(0, 1200)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(0, 40, by = 5), limits = c(0, 40)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
theme_minimal(base_size = 14)
p
ggsave(filename = file.path("plots_temp", "temp_media.jpg"),
plot = p,
width = 21, height = 12, units = "in", dpi = 300)
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
ggsave(filename = file.path("plots_temp", "temp_media.jpg"),
plot = p,
width = 21, height = 12, units = "in", dpi = 300)
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(0, 40, by = 5), limits = c(0, 40)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(15, 30, by = 5), limits = c(15, 30)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(12, 30, by = 5), limits = c(15, 30)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(12, 32, by = 5), limits = c(12, 32)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(14, 32, by = 5), limits = c(14, 32)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(14, 32, by = 2), limits = c(14, 32)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(14, 32, by = 1), limits = c(14, 32)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(14, 31, by = 1), limits = c(14, 31)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_x_continuous(breaks = seq(15, 31, by = 1), limits = c(15, 31)) +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
p <- ggplot(dta, aes(x = temp_media)) +
geom_histogram(bins = 20, fill = "gray45", color = "white") +
xlab("\nTemperatura média (°C)") +
ylab("Frequência \n") +
ggtitle("") +
scale_y_continuous(breaks = seq(0, 600, by = 100), limits = c(0, 600)) +
theme_minimal(base_size = 14)
p
ggsave(filename = file.path("plots_temp", "temp_media.jpg"),
plot = p,
width = 21, height = 12, units = "in", dpi = 300)
# Garantir que a coluna de datas seja do tipo Date
dta$data <- as.Date(dta$data)  # ajuste o nome da coluna se necessário
# Gráfico de pontos
p2 <- ggplot(dta, aes(x = data, y = temp_media)) +
geom_point(color = "gray45", size = 1.5) +
xlab("Ano") +
ylab("Temperatura média (°C)") +
ggtitle("") +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # inclina os rótulos para melhor visualização
# Exibir gráfico
p2
dta$data <- as.Date(dta$data)
p2 <- ggplot(dta, aes(x = data, y = temp_media)) +
geom_point(color = "gray45", size = 1.5) +
xlab("\n Ano") +
ylab("Temperatura média (°C) \n") +
ggtitle("") +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2
ggsave(filename = file.path("plots_temp", "temp_anos"),
plot = p2,
width = 21, height = 12, units = "in", dpi = 300)
ggsave(filename = file.path("plots_temp", "temp_anos.jpg"),
plot = p2,
width = 21, height = 12, units = "in", dpi = 300)
p2 <- ggplot(dta, aes(x = data, y = temp_media)) +
geom_point(color = "gray45", size = 1.5) +
xlab("\n Ano") +
ylab("Temperatura média (°C) \n") +
ggtitle("") +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(hjust = 1))
p2
ggsave(filename = file.path("plots_temp", "temp_anos.jpg"),
plot = p2,
width = 21, height = 12, units = "in", dpi = 300)
p2 <- ggplot(dta, aes(x = data, y = temp_media)) +
geom_point(color = "gray45", size = 1.5) +
xlab("\n Anos") +
ylab("Temperatura média (°C) \n") +
ggtitle("") +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
scale_y_continuous(breaks = seq(0, 40, by = 5), limits = c(0, 40)) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(hjust = 1))
p2
ggsave(filename = file.path("plots_temp", "temp_anos.jpg"),
plot = p2,
width = 21, height = 12, units = "in", dpi = 300)
p <- ggplot(dta, aes(x = data, y = obitos_total)) +
geom_point(color = "gray45", size = 1.5) +
xlab("\n Anos") +
ylab("Óbitos totais \n") +
ggtitle("") +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(hjust = 1))
p
p <- ggplot(dta, aes(x = data, y = obitos_total)) +
geom_point(color = "gray45", size = 1.5) +
xlab("\n Anos") +
ylab("Óbitos totais \n") +
ggtitle("") +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(hjust = 1))
p
ggsave(filename = file.path("plots_temp_obit", "obitos_anos.jpg"),
plot = p,
width = 21, height = 12, units = "in", dpi = 300)
p <- ggplot(dta, aes(x = data, y = obitos_total)) +
geom_point(color = "gray45", size = 1.5) +
xlab("\n Anos") +
ylab("Óbitos totais \n") +
ggtitle("") +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
scale_y_continuous(breaks = seq(0, 130, by = 30), limits = c(0, 130)) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(hjust = 1))
p
p <- ggplot(dta, aes(x = data, y = obitos_total)) +
geom_point(color = "gray45", size = 1.5) +
xlab("\n Anos") +
ylab("Óbitos totais \n") +
ggtitle("") +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
scale_y_continuous(breaks = seq(0, 150, by = 50), limits = c(0, 150)) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(hjust = 1))
p
ggsave(filename = file.path("plots_temp_obit", "obitos_anos.jpg"),
plot = p,
width = 21, height = 12, units = "in", dpi = 300)
